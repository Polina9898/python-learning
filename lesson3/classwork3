# num = [i for i in range(0, 26, 2)]
# print(num)

# num = [i for i in range(26) if i % 2 == 0]
# print(num)

#  LIST COMPREHENSION 
# num = [i + 10 if i % 2 == 0 else i ** 3 for i in range(26)]
# print(num)
# меняется местами тело выражения, четные число увеличиваются на 10, а нечетные возводятся в куб

#  DICTIONARY

# num = {i: i ** 3 for i in range(1, 11)}
# print(num)

# num = {k: v ** 3 for k in "ASSFGDF" for v in range(1, 11)}
# print(num)

# # так же можно записать в виде последовательного кода

# num = {}
# for k in "ASSFGDF":
#     for v in range(1, 11):
#         num[k] = v ** 3
# print(num)

# # как сделать последовательное присвоение значений:

# num = {k: v ** 3 for k, v in zip("ASSFGDF", range(1, 11))}
# print(num)

# Дан список чисел. Определите, сколько в нем
# встречается различных чисел
# Input: [1, 1, 2, 0, -1, 3, 4, 4]
# Output: 6

# list = [1, 1, 2, 0, -1, 3, 4, 4]
# print(list)
# list1 = len(set(list))
# print(list1)


# Дана последовательность из N целых чисел и число
# K. Необходимо сдвинуть всю последовательность
# (сдвиг - циклический) на K элементов вправо, K –
# положительное число.
# Input: [1, 2, 3, 4, 5] k = 3
# Output: [4, 5, 1, 2, 3]

# n = [1, 2, 3, 4, 5]
# k = 3
# result = n[(k % len(n)):] + n[:(k % len(n))]
# print(result)

# Напишите программу для печати всех уникальных
# значений в словаре.
# Input: [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"},
# {"VI": "S005"}, {"VII": " S005 "}, {" V ":" S009 "}, {" VIII
# ":" S007 "}]
# Output: {'S005', 'S002', 'S007', 'S001', 'S009'}

# list_dict = [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005"}, {"VII": " S005 "}, {"V": " S009 "}, {"VIII": " S007 "}]
# print(set(list(i.values()) [0].strip() for i in list_dict))

# Дан массив, состоящий из целых чисел. Напишите
# программу, которая подсчитает количество
# элементов массива, больших предыдущего (элемента
# с предыдущим номером)
# Input: [0, -1, 5, 2, 3]
# Output: 2 (-1 < 5, 2 < 3)

list = [0, -1, 5, 2, 3]
print(sum([ 1 for i in range(1, len(list)) if list[i] > list[i - 1]]))